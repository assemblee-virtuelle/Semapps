version: '3.5'
services:
  fuseki:
    build:
      context: ./src/jena/fuseki-docker
      dockerfile: Dockerfile
    container_name: fuseki
    restart: always
    volumes:
      - rdf_data:/fuseki
      - staging:/staging
    ports:
      - "3030:3030"
    expose:
      - "3030"
    networks:
      - semapps
    environment:
      ADMIN_PASSWORD: "admin"

  middleware:
    build:
      context: ./src/middleware
      dockerfile: Dockerfile
    container_name: middleware
    restart: always
    depends_on:
      - fuseki
    volumes:
      - ./src/middleware:/main/
    networks:
      - semapps
    ports:
      - "3000:3000"
    expose:
      - "3000"
    command: ./boilerplates/${MIDDLEWARE}/entrypoint.sh

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.dev
      args:
        - FRONTEND
    container_name: frontend
    restart: always
    depends_on:
      - middleware
    environment:
      - PORT=5000
    volumes:
      - ./src/frontend:/app/
    networks:
      - semapps
    ports:
      - "5000:5000"
    expose:
      - "5000"
    command: bash -c "npm rebuild && npm install && npm run bootstrap && npm start --prefix ./${FRONTEND}"

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - semapps
    command: ["redis-server", "--appendonly", "yes"]

  bull-board:
    build: ./deploy/bull-board
    container_name: bull-board
    ports:
      - "3040:3040"
    expose:
      - "3040"
    networks:
      - semapps
    environment:
      REDIS_HOST: 'redis'
      PORT: 3040

  arena:
    build: ./deploy/arena
    container_name: arena
    volumes:
      - ./deploy/arena/config:/opt/arena/src/server/config
    ports:
      - "3050:4567"
    networks:
      - semapps
    environment:
      REDIS_HOST: 'redis'

volumes:
  rdf_data:
  staging:
  redis_data:
networks:
  semapps:
    name: semapps_network
