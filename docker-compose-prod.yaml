version: '3.5'
services:
  fuseki:
    # user: fuseki
    build:
      context: ./src/jena/fuseki-docker
      dockerfile: Dockerfile
    container_name: fuseki
    restart: always
    volumes:
      - rdf_data:/fuseki
      - staging:/staging
    ports:
      - "3030:3030"
    expose:
      - "3030"
    networks:
      - semapps
    environment:
      ADMIN_PASSWORD: "admin"

  middleware:
    build:
      context: ./src/middleware
      dockerfile: Dockerfile
    container_name: middleware
    restart: always
    depends_on:
      - fuseki
    networks:
      - semapps
    ports:
      - "3000:3000"
    expose:
      - "3000"
    command: npm run start --prefix ./boilerplates/${MIDDLEWARE}

  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile.prod
      args:
        - FRONTEND
    container_name: frontend
    restart: always
    depends_on:
      - middleware
    environment:
      - PORT=5000
    networks:
      - semapps
    ports:
      - "5000:5000"
    expose:
      - "5000"

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./deploy/nginx:/etc/nginx/conf.d
      - ./deploy/certbot/conf:/etc/letsencrypt
      - ./deploy/certbot/www:/var/www/certbot
    networks:
      - semapps
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
      - "443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./deploy/certbot/conf:/etc/letsencrypt
      - ./deploy/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  rdf_data:
  staging:
networks:
  semapps:
    name: semapps_network
